# namespace
apiVersion: v1
kind: Namespace
metadata:
  name: dev-voting-app
---
#volumes
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: voting_app_volume
#   namespace: dev-voting-app
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 5Gi
#   storageClassName: standard-rwo
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: result_app_volume
#   namespace: dev-voting-app
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 5Gi
#   storageClassName: standard-rwo
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-volume
  namespace: dev-voting-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard-rwo
---
#voting_app
apiVersion: apps/v1
kind: Deployment
metadata:
    labels:
      app: vote
    name: vote
    namespace: dev-voting-app
spec:
    replicas: 1
    selector:
        matchLabels:
            app: vote
    template:
        metadata:
            labels:
                app: vote
        spec:
            hostname: vote
            containers:
                - name: vote
                  image: owaincharlon/owain-infra-cloud-voting_app:v1_prod
                  ports:
                      - containerPort: 80
                  imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
    name: vote
    namespace: dev-voting-app
    labels:
        run: vote
spec:
    ports:
        - port: 80
          protocol: TCP
    selector:
        app: vote
    type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
    labels:
      app: result
    name: result
    namespace: dev-voting-app
spec:
    replicas: 1
    selector:
        matchLabels:
            app: result
    template:
        metadata:
            labels:
                app: result
        spec:
            hostname: result
            containers:
                - name: result
                  image: owaincharlon/owain-infra-cloud-result_app:v1_prod
                  ports:
                      - containerPort: 4000
                  imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
    name: result
    namespace: dev-voting-app
    labels:
        run: result
spec:
    ports:
        - port: 4000
          protocol: TCP
    selector:
        app: result
    type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
    labels:
      app: worker
    name: worker
    namespace: dev-voting-app
spec:
    replicas: 1
    selector:
        matchLabels:
            app: worker
    template:
        metadata:
            labels:
                app: worker
        spec:
            hostname: worker
            containers:
                - name: worker
                  image: owaincharlon/owain-infra-cloud-worker:v1_prod
                  # ports:
                  #     - containerPort: 4000
                  # imagePullPolicy: Always
# ---
#service worker
# apiVersion: v1
# kind: Service
# metadata:
#   name: worker-service
#   namespace: dev-voting-app
# spec:
#   selector:
#     app: worker
#   ports:
#     - port: 6379
#       targetPort: 6379
#   type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
    labels:
      app: redis
    name: redis
    namespace: dev-voting-app
spec:
    replicas: 1
    selector:
        matchLabels:
            app: redis
    template:
        metadata:
            labels:
                app: redis
        spec:
            hostname: redis
            containers:
                - name: redis
                  image: redis:alpine
                  ports:
                  - containerPort: 6379
                    name: redis
---
#service redis
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
  name: redis
  namespace: dev-voting-app
spec:
  type: ClusterIP
  ports:
  - name: "redis-service"
    port: 6379
    targetPort: 6379
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
    labels:
      app: db
    name: db
    namespace: dev-voting-app
spec:
    replicas: 1
    selector:
        matchLabels:
            app: db
    # volumes:
    # - name: pvc-db
    #   persistentVolumeClaim:
    #   claimName: db-volume
    template:
        metadata:
            labels:
                app: db
        spec:
            # hostname: db
            containers:
                - name: db
                  image: postgres:15-alpine
                  # ports:
                  #     - containerPort: 4000
                  # imagePullPolicy: Always
                  env:
                    - name: POSTGRES_USER
                      value: postgres
                    - name: POSTGRES_PASSWORD
                      value: postgres
                  ports:
                    - containerPort: 5432
          #         volumeMounts:
          #         - mountPath: /var/lib/postgresql/data
          #         name: db-data
          # volumes:
          #   - name: db-data
          #   emptyDir: {} 
---
#service db
apiVersion: v1
kind: Service
metadata:
  labels:
    app: db
  name: db
  namespace: dev-voting-app
spec:
  type: ClusterIP
  ports:
  - name: "db-service"
    port: 5432
    targetPort: 5432
  selector:
    app: db
